/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Document";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	iv_ruleDocument=ruleDocument
	{ $current=$iv_ruleDocument.current; }
	EOF;

// Rule Document
ruleDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDocumentAccess().getOwnedImportsImportParserRuleCall_0_0());
				}
				lv_ownedImports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocumentRule());
					}
					add(
						$current,
						"ownedImports",
						lv_ownedImports_0_0,
						"org.xtext.example.mydsl.MyDsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDocumentAccess().getOwnedPropertiesPropertyParserRuleCall_1_0());
				}
				lv_ownedProperties_1_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocumentRule());
					}
					add(
						$current,
						"ownedProperties",
						lv_ownedProperties_1_0,
						"org.xtext.example.mydsl.MyDsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_IMPORT_URI
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURIIMPORT_URITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.xtext.example.mydsl.MyDsl.IMPORT_URI");
				}
			)
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPropertyAccess().getAndPropertyAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_0_1_0_0());
						}
						lv_left_1_0=ruleUnaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"org.xtext.example.mydsl.MyDsl.UnaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_0_1_1_0());
						}
						lv_left_2_0=ruleBinaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_2_0,
								"org.xtext.example.mydsl.MyDsl.BinaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_0_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_0_1_2_1_0());
							}
							lv_left_4_0=ruleUnaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_4_0,
									"org.xtext.example.mydsl.MyDsl.UnaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=')'
					{
						newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_0_1_2_2());
					}
				)
				    |
				(
					otherlv_6='('
					{
						newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_0_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_0_1_3_1_0());
							}
							lv_left_7_0=ruleBinaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_7_0,
									"org.xtext.example.mydsl.MyDsl.BinaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_8=')'
					{
						newLeafNode(otherlv_8, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_0_1_3_2());
					}
				)
			)
			otherlv_9='and'
			{
				newLeafNode(otherlv_9, grammarAccess.getPropertyAccess().getAndKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getRightPropertyParserRuleCall_0_3_0());
					}
					lv_right_10_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_10_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPropertyAccess().getOrPropertyBooleanPropertyAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_1_1_0_0());
						}
						lv_left_12_0=ruleUnaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_12_0,
								"org.xtext.example.mydsl.MyDsl.UnaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_1_1_1_0());
						}
						lv_left_13_0=ruleBinaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"org.xtext.example.mydsl.MyDsl.BinaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_14='('
					{
						newLeafNode(otherlv_14, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_1_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_1_1_2_1_0());
							}
							lv_left_15_0=ruleUnaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_15_0,
									"org.xtext.example.mydsl.MyDsl.UnaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_16=')'
					{
						newLeafNode(otherlv_16, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_1_1_2_2());
					}
				)
				    |
				(
					otherlv_17='('
					{
						newLeafNode(otherlv_17, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_1_1_3_1_0());
							}
							lv_left_18_0=ruleBinaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_18_0,
									"org.xtext.example.mydsl.MyDsl.BinaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_19=')'
					{
						newLeafNode(otherlv_19, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_1_1_3_2());
					}
				)
			)
			otherlv_20='or'
			{
				newLeafNode(otherlv_20, grammarAccess.getPropertyAccess().getOrKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getRightPropertyParserRuleCall_1_3_0());
					}
					lv_right_21_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_21_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPropertyAccess().getAbortPropertyAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_2_1_0_0());
						}
						lv_left_23_0=ruleUnaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_23_0,
								"org.xtext.example.mydsl.MyDsl.UnaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_2_1_1_0());
						}
						lv_left_24_0=ruleBinaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_24_0,
								"org.xtext.example.mydsl.MyDsl.BinaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_25='('
					{
						newLeafNode(otherlv_25, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_2_1_2_1_0());
							}
							lv_left_26_0=ruleUnaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_26_0,
									"org.xtext.example.mydsl.MyDsl.UnaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_27=')'
					{
						newLeafNode(otherlv_27, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_2_1_2_2());
					}
				)
				    |
				(
					otherlv_28='('
					{
						newLeafNode(otherlv_28, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_2_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_2_1_3_1_0());
							}
							lv_left_29_0=ruleBinaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_29_0,
									"org.xtext.example.mydsl.MyDsl.BinaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_30=')'
					{
						newLeafNode(otherlv_30, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_2_1_3_2());
					}
				)
			)
			otherlv_31='abort'
			{
				newLeafNode(otherlv_31, grammarAccess.getPropertyAccess().getAbortKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getRightBooleanOrOCLLiteralParserRuleCall_2_3_0());
					}
					lv_right_32_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_32_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPropertyAccess().getUntilPropertyAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_3_1_0_0());
						}
						lv_left_34_0=ruleUnaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_34_0,
								"org.xtext.example.mydsl.MyDsl.UnaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_3_1_1_0());
						}
						lv_left_35_0=ruleBinaryProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"left",
								lv_left_35_0,
								"org.xtext.example.mydsl.MyDsl.BinaryProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_36='('
					{
						newLeafNode(otherlv_36, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_3_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftUnaryPropertyParserRuleCall_3_1_2_1_0());
							}
							lv_left_37_0=ruleUnaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_37_0,
									"org.xtext.example.mydsl.MyDsl.UnaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_38=')'
					{
						newLeafNode(otherlv_38, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_3_1_2_2());
					}
				)
				    |
				(
					otherlv_39='('
					{
						newLeafNode(otherlv_39, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_3_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyAccess().getLeftBinaryPropertyParserRuleCall_3_1_3_1_0());
							}
							lv_left_40_0=ruleBinaryProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyRule());
								}
								set(
									$current,
									"left",
									lv_left_40_0,
									"org.xtext.example.mydsl.MyDsl.BinaryProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_41=')'
					{
						newLeafNode(otherlv_41, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_3_1_3_2());
					}
				)
			)
			otherlv_42='until'
			{
				newLeafNode(otherlv_42, grammarAccess.getPropertyAccess().getUntilKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getRightBooleanOrOCLLiteralParserRuleCall_3_3_0());
					}
					lv_right_43_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_43_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getUnaryPropertyParserRuleCall_4());
		}
		this_UnaryProperty_44=ruleUnaryProperty
		{
			$current = $this_UnaryProperty_44.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getBinaryPropertyParserRuleCall_5());
		}
		this_BinaryProperty_45=ruleBinaryProperty
		{
			$current = $this_BinaryProperty_45.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_46='('
			{
				newLeafNode(otherlv_46, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_6_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getPropertyAccess().getUnaryPropertyParserRuleCall_6_1());
			}
			this_UnaryProperty_47=ruleUnaryProperty
			{
				$current = $this_UnaryProperty_47.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_48=')'
			{
				newLeafNode(otherlv_48, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_6_2());
			}
		)
		    |
		(
			otherlv_49='('
			{
				newLeafNode(otherlv_49, grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_7_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getPropertyAccess().getBinaryPropertyParserRuleCall_7_1());
			}
			this_BinaryProperty_50=ruleBinaryProperty
			{
				$current = $this_BinaryProperty_50.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_51=')'
			{
				newLeafNode(otherlv_51, grammarAccess.getPropertyAccess().getRightParenthesisKeyword_7_2());
			}
		)
	)
;

// Entry rule entryRuleUnaryProperty
entryRuleUnaryProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryPropertyRule()); }
	iv_ruleUnaryProperty=ruleUnaryProperty
	{ $current=$iv_ruleUnaryProperty.current; }
	EOF;

// Rule UnaryProperty
ruleUnaryProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getBooleanPropertyAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandBooleanOrOCLLiteralParserRuleCall_0_1_0());
					}
					lv_operand_1_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_1_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getSequencePropertyAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandSequenceParserRuleCall_1_1_0());
					}
					lv_operand_3_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_3_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getSequenceTightPropertyAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandSequenceParserRuleCall_2_1_0());
					}
					lv_operand_5_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_5_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='!'
			{
				newLeafNode(otherlv_6, grammarAccess.getUnaryPropertyAccess().getExclamationMarkKeyword_2_2());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getAlwaysPropertyAction_3_0(),
						$current);
				}
			)
			otherlv_8='always'
			{
				newLeafNode(otherlv_8, grammarAccess.getUnaryPropertyAccess().getAlwaysKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandPropertyParserRuleCall_3_2_0());
					}
					lv_operand_9_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_9_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getNeverBooleanPropertyAction_4_0(),
						$current);
				}
			)
			otherlv_11='never'
			{
				newLeafNode(otherlv_11, grammarAccess.getUnaryPropertyAccess().getNeverKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandBooleanOrOCLLiteralParserRuleCall_4_2_0());
					}
					lv_operand_12_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_12_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getNeverSequencePropertyAction_5_0(),
						$current);
				}
			)
			otherlv_14='never'
			{
				newLeafNode(otherlv_14, grammarAccess.getUnaryPropertyAccess().getNeverKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandSequenceParserRuleCall_5_2_0());
					}
					lv_operand_15_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_15_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getNextEPropertyAction_6_0(),
						$current);
				}
			)
			otherlv_17='next_e'
			{
				newLeafNode(otherlv_17, grammarAccess.getUnaryPropertyAccess().getNext_eKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandBooleanOrOCLLiteralParserRuleCall_6_2_0());
					}
					lv_operand_18_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_18_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getEventuallyBooleanPropertyAction_7_0(),
						$current);
				}
			)
			otherlv_20='eventually!'
			{
				newLeafNode(otherlv_20, grammarAccess.getUnaryPropertyAccess().getEventuallyKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandBooleanOrOCLLiteralParserRuleCall_7_2_0());
					}
					lv_operand_21_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_21_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryPropertyAccess().getEventuallySequencePropertyAction_8_0(),
						$current);
				}
			)
			otherlv_23='eventually!'
			{
				newLeafNode(otherlv_23, grammarAccess.getUnaryPropertyAccess().getEventuallyKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryPropertyAccess().getOperandSequenceParserRuleCall_8_2_0());
					}
					lv_operand_24_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryPropertyRule());
						}
						set(
							$current,
							"operand",
							lv_operand_24_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBinaryProperty
entryRuleBinaryProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryPropertyRule()); }
	iv_ruleBinaryProperty=ruleBinaryProperty
	{ $current=$iv_ruleBinaryProperty.current; }
	EOF;

// Rule BinaryProperty
ruleBinaryProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getOrBooleanPropertyPropertyAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_0_1_0());
					}
					lv_left_1_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_1_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getBinaryPropertyAccess().getOrKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightPropertyParserRuleCall_0_3_0());
					}
					lv_right_3_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getImpliesPropertyAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_1_1_0());
					}
					lv_left_5_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_5_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='->'
			{
				newLeafNode(otherlv_6, grammarAccess.getBinaryPropertyAccess().getHyphenMinusGreaterThanSignKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightPropertyParserRuleCall_1_3_0());
					}
					lv_right_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getEquivalencePropertyAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_2_1_0());
					}
					lv_left_9_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_9_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='<->'
			{
				newLeafNode(otherlv_10, grammarAccess.getBinaryPropertyAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightBooleanOrOCLLiteralParserRuleCall_2_3_0());
					}
					lv_right_11_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_11_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getOverlappingUntilPropertyAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_3_1_0());
					}
					lv_left_13_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_13_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14='until_'
			{
				newLeafNode(otherlv_14, grammarAccess.getBinaryPropertyAccess().getUntil_Keyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightBooleanOrOCLLiteralParserRuleCall_3_3_0());
					}
					lv_right_15_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_15_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getBeforePropertyAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_4_1_0());
					}
					lv_left_17_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_17_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18='before'
			{
				newLeafNode(otherlv_18, grammarAccess.getBinaryPropertyAccess().getBeforeKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightBooleanOrOCLLiteralParserRuleCall_4_3_0());
					}
					lv_right_19_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_19_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getSuffixImplicationPropertyAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftSequenceParserRuleCall_5_1_0());
					}
					lv_left_21_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_21_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22='|=>'
			{
				newLeafNode(otherlv_22, grammarAccess.getBinaryPropertyAccess().getVerticalLineEqualsSignGreaterThanSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightPropertyParserRuleCall_5_3_0());
					}
					lv_right_23_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_23_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getOverlappingSuffixImplicationPropertyAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftSequenceParserRuleCall_6_1_0());
					}
					lv_left_25_0=ruleSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_25_0,
							"org.xtext.example.mydsl.MyDsl.Sequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_26='|->'
			{
				newLeafNode(otherlv_26, grammarAccess.getBinaryPropertyAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightPropertyParserRuleCall_6_3_0());
					}
					lv_right_27_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_27_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryPropertyAccess().getNextEventAPropertyAction_7_0(),
						$current);
				}
			)
			otherlv_29='next_event_a'
			{
				newLeafNode(otherlv_29, grammarAccess.getBinaryPropertyAccess().getNext_event_aKeyword_7_1());
			}
			otherlv_30='('
			{
				newLeafNode(otherlv_30, grammarAccess.getBinaryPropertyAccess().getLeftParenthesisKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getLeftBooleanOrOCLLiteralParserRuleCall_7_3_0());
					}
					lv_left_31_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"left",
							lv_left_31_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_32=')'
			{
				newLeafNode(otherlv_32, grammarAccess.getBinaryPropertyAccess().getRightParenthesisKeyword_7_4());
			}
			otherlv_33='['
			{
				newLeafNode(otherlv_33, grammarAccess.getBinaryPropertyAccess().getLeftSquareBracketKeyword_7_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRangeRangeParserRuleCall_7_6_0());
					}
					lv_range_34_0=ruleRange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"range",
							lv_range_34_0,
							"org.xtext.example.mydsl.MyDsl.Range");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_35=']'
			{
				newLeafNode(otherlv_35, grammarAccess.getBinaryPropertyAccess().getRightSquareBracketKeyword_7_7());
			}
			otherlv_36='('
			{
				newLeafNode(otherlv_36, grammarAccess.getBinaryPropertyAccess().getLeftParenthesisKeyword_7_8());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryPropertyAccess().getRightPropertyParserRuleCall_7_9_0());
					}
					lv_right_37_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryPropertyRule());
						}
						set(
							$current,
							"right",
							lv_right_37_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_38=')'
			{
				newLeafNode(otherlv_38, grammarAccess.getBinaryPropertyAccess().getRightParenthesisKeyword_7_10());
			}
		)
	)
;

// Entry rule entryRuleBooleanOrOCLLiteral
entryRuleBooleanOrOCLLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanOrOCLLiteralRule()); }
	iv_ruleBooleanOrOCLLiteral=ruleBooleanOrOCLLiteral
	{ $current=$iv_ruleBooleanOrOCLLiteral.current; }
	EOF;

// Rule BooleanOrOCLLiteral
ruleBooleanOrOCLLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanOrOCLLiteralAccess().getNotBooleanOrOCLLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='not'
			{
				newLeafNode(otherlv_1, grammarAccess.getBooleanOrOCLLiteralAccess().getNotKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanOrOCLLiteralAccess().getLiteralBooleanOrOCLLiteralParserRuleCall_0_2_0());
					}
					lv_literal_2_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanOrOCLLiteralRule());
						}
						set(
							$current,
							"literal",
							lv_literal_2_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanOrOCLLiteralAccess().getBooleanLiteralAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanOrOCLLiteralAccess().getLiteralBooleanLiteralExpCSParserRuleCall_1_1_0());
					}
					lv_literal_4_0=ruleBooleanLiteralExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanOrOCLLiteralRule());
						}
						set(
							$current,
							"literal",
							lv_literal_4_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BooleanLiteralExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanOrOCLLiteralAccess().getOCLLiteralAction_2_0(),
						$current);
				}
			)
			otherlv_6='ocl'
			{
				newLeafNode(otherlv_6, grammarAccess.getBooleanOrOCLLiteralAccess().getOclKeyword_2_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanOrOCLLiteralRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getBooleanOrOCLLiteralAccess().getLiteralConstraintCSCrossReference_2_2_0());
					}
					ruleID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSERE
entryRuleSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSERERule()); }
	iv_ruleSERE=ruleSERE
	{ $current=$iv_ruleSERE.current; }
	EOF;

// Rule SERE
ruleSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSEREAccess().getSimpleSEREParserRuleCall_0());
		}
		this_SimpleSERE_0=ruleSimpleSERE
		{
			$current = $this_SimpleSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSEREAccess().getFusionSEREAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSEREAccess().getHdSimpleSEREParserRuleCall_1_1_0());
					}
					lv_hd_2_0=ruleSimpleSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSERERule());
						}
						set(
							$current,
							"hd",
							lv_hd_2_0,
							"org.xtext.example.mydsl.MyDsl.SimpleSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSEREAccess().getColonKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSEREAccess().getTlSimpleSEREParserRuleCall_1_3_0());
					}
					lv_tl_4_0=ruleSimpleSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSERERule());
						}
						set(
							$current,
							"tl",
							lv_tl_4_0,
							"org.xtext.example.mydsl.MyDsl.SimpleSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSEREAccess().getConcatenationSEREAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSEREAccess().getHdSimpleSEREParserRuleCall_2_1_0());
					}
					lv_hd_6_0=ruleSimpleSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSERERule());
						}
						set(
							$current,
							"hd",
							lv_hd_6_0,
							"org.xtext.example.mydsl.MyDsl.SimpleSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getSEREAccess().getSemicolonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSEREAccess().getTlSimpleSEREParserRuleCall_2_3_0());
					}
					lv_tl_8_0=ruleSimpleSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSERERule());
						}
						set(
							$current,
							"tl",
							lv_tl_8_0,
							"org.xtext.example.mydsl.MyDsl.SimpleSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSimpleSERE
entryRuleSimpleSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSERERule()); }
	iv_ruleSimpleSERE=ruleSimpleSERE
	{ $current=$iv_ruleSimpleSERE.current; }
	EOF;

// Rule SimpleSERE
ruleSimpleSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getBooleanOrOCLLiteralParserRuleCall_0());
		}
		this_BooleanOrOCLLiteral_0=ruleBooleanOrOCLLiteral
		{
			$current = $this_BooleanOrOCLLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getSequenceParserRuleCall_1());
		}
		this_Sequence_1=ruleSequence
		{
			$current = $this_Sequence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getCompoundSEREParserRuleCall_2());
		}
		this_CompoundSERE_2=ruleCompoundSERE
		{
			$current = $this_CompoundSERE_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequence
entryRuleSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceRule()); }
	iv_ruleSequence=ruleSequence
	{ $current=$iv_ruleSequence.current; }
	EOF;

// Rule Sequence
ruleSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSequenceAccess().getBracedSEREParserRuleCall_0());
		}
		this_BracedSERE_0=ruleBracedSERE
		{
			$current = $this_BracedSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSequenceAccess().getRepeatedSEREParserRuleCall_1());
		}
		this_RepeatedSERE_1=ruleRepeatedSERE
		{
			$current = $this_RepeatedSERE_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRepeatedSERE
entryRuleRepeatedSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepeatedSERERule()); }
	iv_ruleRepeatedSERE=ruleRepeatedSERE
	{ $current=$iv_ruleRepeatedSERE.current; }
	EOF;

// Rule RepeatedSERE
ruleRepeatedSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedConsecutiveRepetitionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBooleanOrOCLLiteralParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_0_2());
			}
			otherlv_3='*'
			{
				newLeafNode(otherlv_3, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_0_4_0());
					}
					lv_count_4_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_4_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_0_5());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceCountedConsecutiveRepetitionAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBracedSEREParserRuleCall_1_1_0());
					}
					lv_expression_7_0=ruleBracedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_7_0,
							"org.xtext.example.mydsl.MyDsl.BracedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='['
			{
				newLeafNode(otherlv_8, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_1_2());
			}
			otherlv_9='*'
			{
				newLeafNode(otherlv_9, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_1_4_0());
					}
					lv_count_10_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_10_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_1_5());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceCountedConsecutiveRepetitionAction_2_0(),
						$current);
				}
			)
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getRepeatedSEREAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionRepeatedSEREParserRuleCall_2_2_0());
					}
					lv_expression_14_0=ruleRepeatedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_14_0,
							"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15='['
			{
				newLeafNode(otherlv_15, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_2_3());
			}
			otherlv_16='*'
			{
				newLeafNode(otherlv_16, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_2_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_2_5_0());
					}
					lv_count_17_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_17_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_18=']'
			{
				newLeafNode(otherlv_18, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_2_6());
			}
			otherlv_19=')'
			{
				newLeafNode(otherlv_19, grammarAccess.getRepeatedSEREAccess().getRightParenthesisKeyword_2_7());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanConsecutiveRepetitionAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBooleanOrOCLLiteralParserRuleCall_3_1_0());
					}
					lv_expression_21_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_21_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22='['
			{
				newLeafNode(otherlv_22, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_3_2());
			}
			otherlv_23='+'
			{
				newLeafNode(otherlv_23, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_3_3());
			}
			otherlv_24=']'
			{
				newLeafNode(otherlv_24, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_3_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceConsecutiveRepetitionAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBracedSEREParserRuleCall_4_1_0());
					}
					lv_expression_26_0=ruleBracedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_26_0,
							"org.xtext.example.mydsl.MyDsl.BracedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27='['
			{
				newLeafNode(otherlv_27, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_4_2());
			}
			otherlv_28='+'
			{
				newLeafNode(otherlv_28, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_4_3());
			}
			otherlv_29=']'
			{
				newLeafNode(otherlv_29, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_4_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceConsecutiveRepetitionAction_5_0(),
						$current);
				}
			)
			otherlv_31='('
			{
				newLeafNode(otherlv_31, grammarAccess.getRepeatedSEREAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionRepeatedSEREParserRuleCall_5_2_0());
					}
					lv_expression_32_0=ruleRepeatedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_32_0,
							"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33='['
			{
				newLeafNode(otherlv_33, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_5_3());
			}
			otherlv_34='+'
			{
				newLeafNode(otherlv_34, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_5_4());
			}
			otherlv_35=']'
			{
				newLeafNode(otherlv_35, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_5_5());
			}
			otherlv_36=')'
			{
				newLeafNode(otherlv_36, grammarAccess.getRepeatedSEREAccess().getRightParenthesisKeyword_5_6());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedNonConsecutiveRepetitionAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBooleanOrOCLLiteralParserRuleCall_6_1_0());
					}
					lv_expression_38_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_38_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_39='['
			{
				newLeafNode(otherlv_39, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_6_2());
			}
			otherlv_40='='
			{
				newLeafNode(otherlv_40, grammarAccess.getRepeatedSEREAccess().getEqualsSignKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_6_4_0());
					}
					lv_count_41_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_41_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_42=']'
			{
				newLeafNode(otherlv_42, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_6_5());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedGotoRepetitionAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBooleanOrOCLLiteralParserRuleCall_7_1_0());
					}
					lv_expression_44_0=ruleBooleanOrOCLLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_44_0,
							"org.xtext.example.mydsl.MyDsl.BooleanOrOCLLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_45='['
			{
				newLeafNode(otherlv_45, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_7_2());
			}
			otherlv_46='->'
			{
				newLeafNode(otherlv_46, grammarAccess.getRepeatedSEREAccess().getHyphenMinusGreaterThanSignKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_7_4_0());
					}
					lv_count_47_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_47_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_48=']'
			{
				newLeafNode(otherlv_48, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_7_5());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getWildCardAction_8_0(),
						$current);
				}
			)
			otherlv_50='['
			{
				newLeafNode(otherlv_50, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_8_1());
			}
			otherlv_51='*'
			{
				newLeafNode(otherlv_51, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_8_3_0());
					}
					lv_count_52_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_52_0,
							"org.xtext.example.mydsl.MyDsl.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_53=']'
			{
				newLeafNode(otherlv_53, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_8_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getLengthOneAction_9_0(),
						$current);
				}
			)
			otherlv_55='['
			{
				newLeafNode(otherlv_55, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_9_1());
			}
			otherlv_56='+'
			{
				newLeafNode(otherlv_56, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_9_2());
			}
			otherlv_57=']'
			{
				newLeafNode(otherlv_57, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_9_3());
			}
		)
	)
;

// Entry rule entryRuleBracedSERE
entryRuleBracedSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracedSERERule()); }
	iv_ruleBracedSERE=ruleBracedSERE
	{ $current=$iv_ruleBracedSERE.current; }
	EOF;

// Rule BracedSERE
ruleBracedSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBracedSEREAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBracedSEREAccess().getExpressionSEREParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSERE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracedSERERule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.SERE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBracedSEREAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleCompoundSERE
entryRuleCompoundSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundSERERule()); }
	iv_ruleCompoundSERE=ruleCompoundSERE
	{ $current=$iv_ruleCompoundSERE.current; }
	EOF;

// Rule CompoundSERE
ruleCompoundSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getRepeatedSEREParserRuleCall_0());
		}
		this_RepeatedSERE_0=ruleRepeatedSERE
		{
			$current = $this_RepeatedSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getBracedSEREParserRuleCall_1());
		}
		this_BracedSERE_1=ruleBracedSERE
		{
			$current = $this_BracedSERE_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getBinaryCompoundSEREParserRuleCall_2());
		}
		this_BinaryCompoundSERE_2=ruleBinaryCompoundSERE
		{
			$current = $this_BinaryCompoundSERE_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinaryCompoundSERE
entryRuleBinaryCompoundSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryCompoundSERERule()); }
	iv_ruleBinaryCompoundSERE=ruleBinaryCompoundSERE
	{ $current=$iv_ruleBinaryCompoundSERE.current; }
	EOF;

// Rule BinaryCompoundSERE
ruleBinaryCompoundSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREOrAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_0_1_0_0());
						}
						lv_left_1_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_0_1_1_0());
						}
						lv_left_2_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_2_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_0_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_0_1_2_1_0());
							}
							lv_left_4_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_4_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=')'
					{
						newLeafNode(otherlv_5, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_0_1_2_2());
					}
				)
			)
			otherlv_6='|'
			{
				newLeafNode(otherlv_6, grammarAccess.getBinaryCompoundSEREAccess().getVerticalLineKeyword_0_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_0_3_0_0());
						}
						lv_right_7_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_7_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_0_3_1_0());
						}
						lv_right_8_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_8_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_9='('
					{
						newLeafNode(otherlv_9, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_0_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_0_3_2_1_0());
							}
							lv_right_10_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_10_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_11=')'
					{
						newLeafNode(otherlv_11, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_0_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREAndNLMAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_1_1_0_0());
						}
						lv_left_13_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_1_1_1_0());
						}
						lv_left_14_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_14_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_15='('
					{
						newLeafNode(otherlv_15, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_1_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_1_1_2_1_0());
							}
							lv_left_16_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_16_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_17=')'
					{
						newLeafNode(otherlv_17, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_1_1_2_2());
					}
				)
			)
			otherlv_18='&'
			{
				newLeafNode(otherlv_18, grammarAccess.getBinaryCompoundSEREAccess().getAmpersandKeyword_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_1_3_0_0());
						}
						lv_right_19_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_19_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_1_3_1_0());
						}
						lv_right_20_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_20_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_21='('
					{
						newLeafNode(otherlv_21, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_1_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_1_3_2_1_0());
							}
							lv_right_22_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_22_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_23=')'
					{
						newLeafNode(otherlv_23, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_1_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREAndLMAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_2_1_0_0());
						}
						lv_left_25_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_25_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_2_1_1_0());
						}
						lv_left_26_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_26_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_27='('
					{
						newLeafNode(otherlv_27, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_2_1_2_1_0());
							}
							lv_left_28_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_28_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_29=')'
					{
						newLeafNode(otherlv_29, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_2_1_2_2());
					}
				)
			)
			otherlv_30='&&'
			{
				newLeafNode(otherlv_30, grammarAccess.getBinaryCompoundSEREAccess().getAmpersandAmpersandKeyword_2_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_2_3_0_0());
						}
						lv_right_31_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_31_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_2_3_1_0());
						}
						lv_right_32_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_32_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_33='('
					{
						newLeafNode(otherlv_33, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_2_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_2_3_2_1_0());
							}
							lv_right_34_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_34_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_35=')'
					{
						newLeafNode(otherlv_35, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_2_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREWithinAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_3_1_0_0());
						}
						lv_left_37_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_37_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_3_1_1_0());
						}
						lv_left_38_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_38_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_39='('
					{
						newLeafNode(otherlv_39, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_3_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_3_1_2_1_0());
							}
							lv_left_40_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_40_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_41=')'
					{
						newLeafNode(otherlv_41, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_3_1_2_2());
					}
				)
			)
			otherlv_42='within'
			{
				newLeafNode(otherlv_42, grammarAccess.getBinaryCompoundSEREAccess().getWithinKeyword_3_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_3_3_0_0());
						}
						lv_right_43_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_43_0,
								"org.xtext.example.mydsl.MyDsl.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_3_3_1_0());
						}
						lv_right_44_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_44_0,
								"org.xtext.example.mydsl.MyDsl.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_45='('
					{
						newLeafNode(otherlv_45, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_3_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_3_3_2_1_0());
							}
							lv_right_46_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_46_0,
									"org.xtext.example.mydsl.MyDsl.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_47=')'
					{
						newLeafNode(otherlv_47, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_3_3_2_2());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCount
entryRuleCount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountRule()); }
	iv_ruleCount=ruleCount
	{ $current=$iv_ruleCount.current; }
	EOF;

// Rule Count
ruleCount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountAccess().getCOUNTNUMBERParserRuleCall_0_0());
				}
				lv_COUNT_0_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountRule());
					}
					set(
						$current,
						"COUNT",
						lv_COUNT_0_0,
						"org.xtext.example.mydsl.MyDsl.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCountAccess().getRangeParserRuleCall_1());
		}
		this_Range_1=ruleRange
		{
			$current = $this_Range_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getLOWER_BOUNDNUMBERParserRuleCall_0_0());
				}
				lv_LOWER_BOUND_0_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"LOWER_BOUND",
						lv_LOWER_BOUND_0_0,
						"org.xtext.example.mydsl.MyDsl.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getHIGHER_BOUNDNUMBERParserRuleCall_2_0());
				}
				lv_HIGHER_BOUND_2_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"HIGHER_BOUND",
						lv_HIGHER_BOUND_2_0,
						"org.xtext.example.mydsl.MyDsl.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleCompleteOCLNavigationOperatorName
entryRuleCompleteOCLNavigationOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCompleteOCLNavigationOperatorNameRule()); }
	iv_ruleCompleteOCLNavigationOperatorName=ruleCompleteOCLNavigationOperatorName
	{ $current=$iv_ruleCompleteOCLNavigationOperatorName.current.getText(); }
	EOF;

// Rule CompleteOCLNavigationOperatorName
ruleCompleteOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompleteOCLNavigationOperatorNameAccess().getCircumflexAccentKeyword_0());
		}
		    |
		kw='^^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompleteOCLNavigationOperatorNameAccess().getCircumflexAccentCircumflexAccentKeyword_1());
		}
	)
;

// Entry rule entryRuleClassifierContextDeclCS
entryRuleClassifierContextDeclCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierContextDeclCSRule()); }
	iv_ruleClassifierContextDeclCS=ruleClassifierContextDeclCS
	{ $current=$iv_ruleClassifierContextDeclCS.current; }
	EOF;

// Rule ClassifierContextDeclCS
ruleClassifierContextDeclCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassifierContextDeclCSAccess().getContextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierContextDeclCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_1_0());
				}
				lv_ownedSignature_1_0=ruleTemplateSignatureCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierContextDeclCSRule());
					}
					set(
						$current,
						"ownedSignature",
						lv_ownedSignature_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TemplateSignatureCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameUnrestrictedNameParserRuleCall_2_0());
				}
				lv_selfName_2_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierContextDeclCSRule());
					}
					set(
						$current,
						"selfName",
						lv_selfName_2_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierContextDeclCSAccess().getOwnedPathNamePathNameCSParserRuleCall_3_0());
				}
				lv_ownedPathName_3_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierContextDeclCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_3_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_4='inv'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierContextDeclCSAccess().getInvKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierContextDeclCSAccess().getOwnedInvariantsConstraintCSParserRuleCall_4_0_1_0());
						}
						lv_ownedInvariants_5_0=ruleConstraintCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierContextDeclCSRule());
							}
							add(
								$current,
								"ownedInvariants",
								lv_ownedInvariants_5_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ConstraintCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierContextDeclCSAccess().getOwnedDefinitionsDefCSParserRuleCall_4_1_0());
					}
					lv_ownedDefinitions_6_0=ruleDefCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierContextDeclCSRule());
						}
						add(
							$current,
							"ownedDefinitions",
							lv_ownedDefinitions_6_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.DefCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleConstraintCS
entryRuleConstraintCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintCSRule()); }
	iv_ruleConstraintCS=ruleConstraintCS
	{ $current=$iv_ruleConstraintCS.current; }
	EOF;

// Rule ConstraintCS
ruleConstraintCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleUnrestrictedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintCSRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getConstraintCSAccess().getLeftParenthesisKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_0_1_1_0());
						}
						lv_ownedMessageSpecification_2_0=ruleSpecificationCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintCSRule());
							}
							set(
								$current,
								"ownedMessageSpecification",
								lv_ownedMessageSpecification_2_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getConstraintCSAccess().getRightParenthesisKeyword_0_1_2());
				}
			)?
		)?
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstraintCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_2_0());
				}
				lv_ownedSpecification_5_0=ruleSpecificationCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintCSRule());
					}
					set(
						$current,
						"ownedSpecification",
						lv_ownedSpecification_5_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContextDeclCS
entryRuleContextDeclCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextDeclCSRule()); }
	iv_ruleContextDeclCS=ruleContextDeclCS
	{ $current=$iv_ruleContextDeclCS.current; }
	EOF;

// Rule ContextDeclCS
ruleContextDeclCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getContextDeclCSAccess().getPropertyContextDeclCSParserRuleCall_0());
		}
		this_PropertyContextDeclCS_0=rulePropertyContextDeclCS
		{
			$current = $this_PropertyContextDeclCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getContextDeclCSAccess().getClassifierContextDeclCSParserRuleCall_1());
		}
		this_ClassifierContextDeclCS_1=ruleClassifierContextDeclCS
		{
			$current = $this_ClassifierContextDeclCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getContextDeclCSAccess().getOperationContextDeclCSParserRuleCall_2());
		}
		this_OperationContextDeclCS_2=ruleOperationContextDeclCS
		{
			$current = $this_OperationContextDeclCS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefCS
entryRuleDefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefCSRule()); }
	iv_ruleDefCS=ruleDefCS
	{ $current=$iv_ruleDefCS.current; }
	EOF;

// Rule DefCS
ruleDefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDefCSAccess().getDefOperationCSParserRuleCall_0());
		}
		this_DefOperationCS_0=ruleDefOperationCS
		{
			$current = $this_DefOperationCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDefCSAccess().getDefPropertyCSParserRuleCall_1());
		}
		this_DefPropertyCS_1=ruleDefPropertyCS
		{
			$current = $this_DefPropertyCS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefOperationCS
entryRuleDefOperationCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefOperationCSRule()); }
	iv_ruleDefOperationCS=ruleDefOperationCS
	{ $current=$iv_ruleDefOperationCS.current; }
	EOF;

// Rule DefOperationCS
ruleDefOperationCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isStatic_0_0='static'
				{
					newLeafNode(lv_isStatic_0_0, grammarAccess.getDefOperationCSAccess().getIsStaticStaticKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefOperationCSRule());
					}
					setWithLastConsumed($current, "isStatic", true, "static");
				}
			)
		)?
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefOperationCSAccess().getDefKeyword_1());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getDefOperationCSAccess().getUnrestrictedNameParserRuleCall_2());
			}
			ruleUnrestrictedName
			{
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefOperationCSAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_4_0());
				}
				lv_ownedSignature_4_0=ruleTemplateSignatureCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
					}
					set(
						$current,
						"ownedSignature",
						lv_ownedSignature_4_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TemplateSignatureCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDefOperationCSAccess().getNameUnrestrictedNameParserRuleCall_5_0());
				}
				lv_name_5_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getDefOperationCSAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDefOperationCSAccess().getOwnedParametersDefParameterCSParserRuleCall_7_0_0());
					}
					lv_ownedParameters_7_0=ruleDefParameterCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
						}
						add(
							$current,
							"ownedParameters",
							lv_ownedParameters_7_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.DefParameterCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDefOperationCSAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefOperationCSAccess().getOwnedParametersDefParameterCSParserRuleCall_7_1_1_0());
						}
						lv_ownedParameters_9_0=ruleDefParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
							}
							add(
								$current,
								"ownedParameters",
								lv_ownedParameters_9_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.DefParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getDefOperationCSAccess().getRightParenthesisKeyword_8());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getDefOperationCSAccess().getColonKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefOperationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_10_0());
				}
				lv_ownedType_12_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_12_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getDefOperationCSAccess().getEqualsSignKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefOperationCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_12_0());
				}
				lv_ownedSpecification_14_0=ruleSpecificationCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefOperationCSRule());
					}
					set(
						$current,
						"ownedSpecification",
						lv_ownedSpecification_14_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefParameterCS
entryRuleDefParameterCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefParameterCSRule()); }
	iv_ruleDefParameterCS=ruleDefParameterCS
	{ $current=$iv_ruleDefParameterCS.current; }
	EOF;

// Rule DefParameterCS
ruleDefParameterCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefParameterCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefParameterCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());
				}
				lv_ownedType_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefParameterCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefPropertyCS
entryRuleDefPropertyCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefPropertyCSRule()); }
	iv_ruleDefPropertyCS=ruleDefPropertyCS
	{ $current=$iv_ruleDefPropertyCS.current; }
	EOF;

// Rule DefPropertyCS
ruleDefPropertyCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isStatic_0_0='static'
				{
					newLeafNode(lv_isStatic_0_0, grammarAccess.getDefPropertyCSAccess().getIsStaticStaticKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefPropertyCSRule());
					}
					setWithLastConsumed($current, "isStatic", true, "static");
				}
			)
		)?
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefPropertyCSAccess().getDefKeyword_1());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getDefPropertyCSAccess().getUnrestrictedNameParserRuleCall_2());
			}
			ruleUnrestrictedName
			{
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefPropertyCSAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefPropertyCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());
				}
				lv_name_4_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefPropertyCSRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefPropertyCSAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefPropertyCSAccess().getOwnedTypeTypeExpCSParserRuleCall_6_0());
				}
				lv_ownedType_6_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefPropertyCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_6_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getDefPropertyCSAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefPropertyCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_8_0());
				}
				lv_ownedSpecification_8_0=ruleSpecificationCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefPropertyCSRule());
					}
					set(
						$current,
						"ownedSpecification",
						lv_ownedSpecification_8_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportCS
entryRuleImportCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportCSRule()); }
	iv_ruleImportCS=ruleImportCS
	{ $current=$iv_ruleImportCS.current; }
	EOF;

// Rule ImportCS
ruleImportCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='import'
			{
				newLeafNode(otherlv_0, grammarAccess.getImportCSAccess().getImportKeyword_0_0());
			}
			    |
			otherlv_1='include'
			{
				newLeafNode(otherlv_1, grammarAccess.getImportCSAccess().getIncludeKeyword_0_1());
			}
			    |
			otherlv_2='library'
			{
				newLeafNode(otherlv_2, grammarAccess.getImportCSAccess().getLibraryKeyword_0_2());
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportCSAccess().getNameIdentifierParserRuleCall_1_0_0());
					}
					lv_name_3_0=ruleIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportCSRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.ocl.xtext.base.Base.Identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getImportCSAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_2_0());
				}
				lv_ownedPathName_5_0=ruleURIPathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_5_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isAll_6_0='::*'
				{
					newLeafNode(lv_isAll_6_0, grammarAccess.getImportCSAccess().getIsAllColonColonAsteriskKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportCSRule());
					}
					setWithLastConsumed($current, "isAll", true, "::*");
				}
			)
		)?
	)
;

// Entry rule entryRuleOperationContextDeclCS
entryRuleOperationContextDeclCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationContextDeclCSRule()); }
	iv_ruleOperationContextDeclCS=ruleOperationContextDeclCS
	{ $current=$iv_ruleOperationContextDeclCS.current; }
	EOF;

// Rule OperationContextDeclCS
ruleOperationContextDeclCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationContextDeclCSAccess().getContextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_1_0());
				}
				lv_ownedSignature_1_0=ruleTemplateSignatureCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
					}
					set(
						$current,
						"ownedSignature",
						lv_ownedSignature_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TemplateSignatureCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedPathNamePathNameCSParserRuleCall_2_0());
				}
				lv_ownedPathName_2_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_2_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationContextDeclCSAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedParametersParameterCSParserRuleCall_4_0_0());
					}
					lv_ownedParameters_4_0=ruleParameterCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
						}
						add(
							$current,
							"ownedParameters",
							lv_ownedParameters_4_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ParameterCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getOperationContextDeclCSAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedParametersParameterCSParserRuleCall_4_1_1_0());
						}
						lv_ownedParameters_6_0=ruleParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
							}
							add(
								$current,
								"ownedParameters",
								lv_ownedParameters_6_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationContextDeclCSAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getOperationContextDeclCSAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedTypeTypeExpCSParserRuleCall_7_0());
				}
				lv_ownedType_9_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_9_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_10='pre'
				{
					newLeafNode(otherlv_10, grammarAccess.getOperationContextDeclCSAccess().getPreKeyword_8_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedPreconditionsConstraintCSParserRuleCall_8_0_1_0());
						}
						lv_ownedPreconditions_11_0=ruleConstraintCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
							}
							add(
								$current,
								"ownedPreconditions",
								lv_ownedPreconditions_11_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ConstraintCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_12='post'
				{
					newLeafNode(otherlv_12, grammarAccess.getOperationContextDeclCSAccess().getPostKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedPostconditionsConstraintCSParserRuleCall_8_1_1_0());
						}
						lv_ownedPostconditions_13_0=ruleConstraintCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
							}
							add(
								$current,
								"ownedPostconditions",
								lv_ownedPostconditions_13_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ConstraintCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_14='body'
				{
					newLeafNode(otherlv_14, grammarAccess.getOperationContextDeclCSAccess().getBodyKeyword_8_2_0());
				}
				(
					{
						/* */
					}
					{
						newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getUnrestrictedNameParserRuleCall_8_2_1());
					}
					ruleUnrestrictedName
					{
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_16=':'
				{
					newLeafNode(otherlv_16, grammarAccess.getOperationContextDeclCSAccess().getColonKeyword_8_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationContextDeclCSAccess().getOwnedBodiesSpecificationCSParserRuleCall_8_2_3_0());
						}
						lv_ownedBodies_17_0=ruleSpecificationCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationContextDeclCSRule());
							}
							add(
								$current,
								"ownedBodies",
								lv_ownedBodies_17_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePackageDeclarationCS
entryRulePackageDeclarationCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageDeclarationCSRule()); }
	iv_rulePackageDeclarationCS=rulePackageDeclarationCS
	{ $current=$iv_rulePackageDeclarationCS.current; }
	EOF;

// Rule PackageDeclarationCS
rulePackageDeclarationCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationCSAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationCSAccess().getOwnedPathNamePathNameCSParserRuleCall_1_0());
				}
				lv_ownedPathName_1_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_1_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='inv'
			{
				newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationCSAccess().getInvKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageDeclarationCSAccess().getOwnedInvariantsConstraintCSParserRuleCall_2_1_0());
					}
					lv_ownedInvariants_3_0=ruleConstraintCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageDeclarationCSRule());
						}
						add(
							$current,
							"ownedInvariants",
							lv_ownedInvariants_3_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ConstraintCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationCSAccess().getOwnedContextsContextDeclCSParserRuleCall_3_0());
				}
				lv_ownedContexts_4_0=ruleContextDeclCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationCSRule());
					}
					add(
						$current,
						"ownedContexts",
						lv_ownedContexts_4_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ContextDeclCS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='endpackage'
		{
			newLeafNode(otherlv_5, grammarAccess.getPackageDeclarationCSAccess().getEndpackageKeyword_4());
		}
	)
;

// Entry rule entryRuleParameterCS
entryRuleParameterCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterCSRule()); }
	iv_ruleParameterCS=ruleParameterCS
	{ $current=$iv_ruleParameterCS.current; }
	EOF;

// Rule ParameterCS
ruleParameterCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleUnrestrictedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterCSRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_0());
				}
				lv_ownedType_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePropertyContextDeclCS
entryRulePropertyContextDeclCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyContextDeclCSRule()); }
	iv_rulePropertyContextDeclCS=rulePropertyContextDeclCS
	{ $current=$iv_rulePropertyContextDeclCS.current; }
	EOF;

// Rule PropertyContextDeclCS
rulePropertyContextDeclCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyContextDeclCSAccess().getContextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyContextDeclCSAccess().getOwnedPathNamePathNameCSParserRuleCall_1_0());
				}
				lv_ownedPathName_1_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyContextDeclCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_1_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyContextDeclCSAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyContextDeclCSAccess().getOwnedTypeTypeExpCSParserRuleCall_3_0());
				}
				lv_ownedType_3_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyContextDeclCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_3_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_4='derive'
				{
					newLeafNode(otherlv_4, grammarAccess.getPropertyContextDeclCSAccess().getDeriveKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyContextDeclCSAccess().getOwnedDerivedInvariantsConstraintCSParserRuleCall_4_0_1_0());
						}
						lv_ownedDerivedInvariants_5_0=ruleConstraintCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyContextDeclCSRule());
							}
							add(
								$current,
								"ownedDerivedInvariants",
								lv_ownedDerivedInvariants_5_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.ConstraintCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_6='init'
				{
					newLeafNode(otherlv_6, grammarAccess.getPropertyContextDeclCSAccess().getInitKeyword_4_1_0());
				}
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getPropertyContextDeclCSAccess().getColonKeyword_4_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyContextDeclCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_4_1_2_0());
						}
						lv_ownedDefaultExpressions_8_0=ruleSpecificationCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyContextDeclCSRule());
							}
							add(
								$current,
								"ownedDefaultExpressions",
								lv_ownedDefaultExpressions_8_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.SpecificationCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleSpecificationCS
entryRuleSpecificationCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationCSRule()); }
	iv_ruleSpecificationCS=ruleSpecificationCS
	{ $current=$iv_ruleSpecificationCS.current; }
	EOF;

// Rule SpecificationCS
ruleSpecificationCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());
				}
				lv_ownedExpression_0_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
					}
					set(
						$current,
						"ownedExpression",
						lv_ownedExpression_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_exprString_1_0=RULE_UNQUOTED_STRING
				{
					newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecificationCSRule());
					}
					setWithLastConsumed(
						$current,
						"exprString",
						lv_exprString_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UNQUOTED_STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTemplateSignatureCS
entryRuleTemplateSignatureCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateSignatureCSRule()); }
	iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS
	{ $current=$iv_ruleTemplateSignatureCS.current; }
	EOF;

// Rule TemplateSignatureCS
ruleTemplateSignatureCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_1_0());
					}
					lv_ownedParameters_1_0=ruleTypeParameterCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
						}
						add(
							$current,
							"ownedParameters",
							lv_ownedParameters_1_0,
							"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_2_1_0());
						}
						lv_ownedParameters_3_0=ruleTypeParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
							}
							add(
								$current,
								"ownedParameters",
								lv_ownedParameters_3_0,
								"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getTemplateSignatureCSAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_1_0());
					}
					lv_ownedParameters_6_0=ruleTypeParameterCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
						}
						add(
							$current,
							"ownedParameters",
							lv_ownedParameters_6_0,
							"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_2_1_0());
						}
						lv_ownedParameters_8_0=ruleTypeParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
							}
							add(
								$current,
								"ownedParameters",
								lv_ownedParameters_8_0,
								"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getTemplateSignatureCSAccess().getGreaterThanSignKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleTypedRefCS
entryRuleTypedRefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedRefCSRule()); }
	iv_ruleTypedRefCS=ruleTypedRefCS
	{ $current=$iv_ruleTypedRefCS.current; }
	EOF;

// Rule TypedRefCS
ruleTypedRefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypeLiteralCSParserRuleCall_0());
		}
		this_TypeLiteralCS_0=ruleTypeLiteralCS
		{
			$current = $this_TypeLiteralCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall_1());
		}
		this_TypedTypeRefCS_1=ruleTypedTypeRefCS
		{
			$current = $this_TypedTypeRefCS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnrestrictedName
entryRuleUnrestrictedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnrestrictedNameRule()); }
	iv_ruleUnrestrictedName=ruleUnrestrictedName
	{ $current=$iv_ruleUnrestrictedName.current.getText(); }
	EOF;

// Rule UnrestrictedName
ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());
		}
		this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName
		{
			$current.merge(this_EssentialOCLUnrestrictedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='import'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getImportKeyword_1());
		}
		    |
		kw='include'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getIncludeKeyword_2());
		}
		    |
		kw='library'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getLibraryKeyword_3());
		}
	)
;

// Entry rule entryRuleNavigatingArgExpCS
entryRuleNavigatingArgExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingArgExpCSRule()); }
	iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS
	{ $current=$iv_ruleNavigatingArgExpCS.current; }
	EOF;

// Rule NavigatingArgExpCS
ruleNavigatingArgExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNavigatingArgExpCSAccess().getOCLMessageArgCSAction_0_0(),
						$current);
				}
			)
			otherlv_1='?'
			{
				newLeafNode(otherlv_1, grammarAccess.getNavigatingArgExpCSAccess().getQuestionMarkKeyword_0_1());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall_1());
		}
		this_ExpCS_2=ruleExpCS
		{
			$current = $this_ExpCS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNavigationOperatorName
entryRuleNavigationOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNavigationOperatorNameRule()); }
	iv_ruleNavigationOperatorName=ruleNavigationOperatorName
	{ $current=$iv_ruleNavigationOperatorName.current.getText(); }
	EOF;

// Rule NavigationOperatorName
ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall_0());
		}
		this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName
		{
			$current.merge(this_EssentialOCLNavigationOperatorName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getCompleteOCLNavigationOperatorNameParserRuleCall_1());
		}
		this_CompleteOCLNavigationOperatorName_1=ruleCompleteOCLNavigationOperatorName
		{
			$current.merge(this_CompleteOCLNavigationOperatorName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimitiveTypeIdentifier
entryRulePrimitiveTypeIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule()); }
	iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier
	{ $current=$iv_rulePrimitiveTypeIdentifier.current.getText(); }
	EOF;

// Rule PrimitiveTypeIdentifier
rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());
		}
		    |
		kw='Integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());
		}
		    |
		kw='Real'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());
		}
		    |
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());
		}
		    |
		kw='UnlimitedNatural'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());
		}
		    |
		kw='OclAny'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());
		}
		    |
		kw='OclInvalid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());
		}
		    |
		kw='OclMessage'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclMessageKeyword_7());
		}
		    |
		kw='OclState'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclStateKeyword_8());
		}
		    |
		kw='OclVoid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_9());
		}
	)
;

// Entry rule entryRuleEssentialOCLUnaryOperatorName
entryRuleEssentialOCLUnaryOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule()); }
	iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName
	{ $current=$iv_ruleEssentialOCLUnaryOperatorName.current.getText(); }
	EOF;

// Rule EssentialOCLUnaryOperatorName
ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());
		}
		    |
		kw='not'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());
		}
	)
;

// Entry rule entryRuleEssentialOCLInfixOperatorName
entryRuleEssentialOCLInfixOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule()); }
	iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName
	{ $current=$iv_ruleEssentialOCLInfixOperatorName.current.getText(); }
	EOF;

// Rule EssentialOCLInfixOperatorName
ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());
		}
		    |
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());
		}
		    |
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_11());
		}
		    |
		kw='xor'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_12());
		}
		    |
		kw='implies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_13());
		}
	)
;

// Entry rule entryRuleEssentialOCLNavigationOperatorName
entryRuleEssentialOCLNavigationOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule()); }
	iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName
	{ $current=$iv_ruleEssentialOCLNavigationOperatorName.current.getText(); }
	EOF;

// Rule EssentialOCLNavigationOperatorName
ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());
		}
		    |
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		    |
		kw='?.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());
		}
		    |
		kw='?->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleBinaryOperatorName
entryRuleBinaryOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBinaryOperatorNameRule()); }
	iv_ruleBinaryOperatorName=ruleBinaryOperatorName
	{ $current=$iv_ruleBinaryOperatorName.current.getText(); }
	EOF;

// Rule BinaryOperatorName
ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());
		}
		this_InfixOperatorName_0=ruleInfixOperatorName
		{
			$current.merge(this_InfixOperatorName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());
		}
		this_NavigationOperatorName_1=ruleNavigationOperatorName
		{
			$current.merge(this_NavigationOperatorName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInfixOperatorName
entryRuleInfixOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInfixOperatorNameRule()); }
	iv_ruleInfixOperatorName=ruleInfixOperatorName
	{ $current=$iv_ruleInfixOperatorName.current.getText(); }
	EOF;

// Rule InfixOperatorName
ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());
	}
	this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName
	{
		$current.merge(this_EssentialOCLInfixOperatorName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleUnaryOperatorName
entryRuleUnaryOperatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperatorNameRule()); }
	iv_ruleUnaryOperatorName=ruleUnaryOperatorName
	{ $current=$iv_ruleUnaryOperatorName.current.getText(); }
	EOF;

// Rule UnaryOperatorName
ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());
	}
	this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName
	{
		$current.merge(this_EssentialOCLUnaryOperatorName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEssentialOCLUnrestrictedName
entryRuleEssentialOCLUnrestrictedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule()); }
	iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName
	{ $current=$iv_ruleEssentialOCLUnrestrictedName.current.getText(); }
	EOF;

// Rule EssentialOCLUnrestrictedName
ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());
	}
	this_Identifier_0=ruleIdentifier
	{
		$current.merge(this_Identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEssentialOCLUnreservedName
entryRuleEssentialOCLUnreservedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule()); }
	iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName
	{ $current=$iv_ruleEssentialOCLUnreservedName.current.getText(); }
	EOF;

// Rule EssentialOCLUnreservedName
ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());
		}
		this_UnrestrictedName_0=ruleUnrestrictedName
		{
			$current.merge(this_UnrestrictedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());
		}
		this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier
		{
			$current.merge(this_CollectionTypeIdentifier_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());
		}
		this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier
		{
			$current.merge(this_PrimitiveTypeIdentifier_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='Map'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());
		}
		    |
		kw='Tuple'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());
		}
	)
;

// Entry rule entryRuleUnreservedName
entryRuleUnreservedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnreservedNameRule()); }
	iv_ruleUnreservedName=ruleUnreservedName
	{ $current=$iv_ruleUnreservedName.current.getText(); }
	EOF;

// Rule UnreservedName
ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());
	}
	this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName
	{
		$current.merge(this_EssentialOCLUnreservedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleURIPathNameCS
entryRuleURIPathNameCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getURIPathNameCSRule()); }
	iv_ruleURIPathNameCS=ruleURIPathNameCS
	{ $current=$iv_ruleURIPathNameCS.current; }
	EOF;

// Rule URIPathNameCS
ruleURIPathNameCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());
				}
				lv_ownedPathElements_0_0=ruleURIFirstPathElementCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
					}
					add(
						$current,
						"ownedPathElements",
						lv_ownedPathElements_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());
					}
					lv_ownedPathElements_2_0=ruleNextPathElementCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
						}
						add(
							$current,
							"ownedPathElements",
							lv_ownedPathElements_2_0,
							"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleURIFirstPathElementCS
entryRuleURIFirstPathElementCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getURIFirstPathElementCSRule()); }
	iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS
	{ $current=$iv_ruleURIFirstPathElementCS.current; }
	EOF;

// Rule URIFirstPathElementCS
ruleURIFirstPathElementCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());
				}
				ruleUnrestrictedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());
					}
					ruleURI
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimitiveTypeCS
entryRulePrimitiveTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeCSRule()); }
	iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS
	{ $current=$iv_rulePrimitiveTypeCS.current; }
	EOF;

// Rule PrimitiveTypeCS
rulePrimitiveTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());
			}
			lv_name_0_0=rulePrimitiveTypeIdentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.ocl.xtext.completeocl.CompleteOCL.PrimitiveTypeIdentifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCollectionTypeIdentifier
entryRuleCollectionTypeIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule()); }
	iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier
	{ $current=$iv_ruleCollectionTypeIdentifier.current.getText(); }
	EOF;

// Rule CollectionTypeIdentifier
ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Set'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());
		}
		    |
		kw='Bag'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());
		}
		    |
		kw='Sequence'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());
		}
		    |
		kw='Collection'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());
		}
		    |
		kw='OrderedSet'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());
		}
	)
;

// Entry rule entryRuleCollectionTypeCS
entryRuleCollectionTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeCSRule()); }
	iv_ruleCollectionTypeCS=ruleCollectionTypeCS
	{ $current=$iv_ruleCollectionTypeCS.current; }
	EOF;

// Rule CollectionTypeCS
ruleCollectionTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());
				}
				lv_name_0_0=ruleCollectionTypeIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleMapTypeCS
entryRuleMapTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeCSRule()); }
	iv_ruleMapTypeCS=ruleMapTypeCS
	{ $current=$iv_ruleMapTypeCS.current; }
	EOF;

// Rule MapTypeCS
ruleMapTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Map'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapTypeCSRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Map");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedKeyType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
						}
						set(
							$current,
							"ownedKeyType",
							lv_ownedKeyType_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());
					}
					lv_ownedValueType_4_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
						}
						set(
							$current,
							"ownedValueType",
							lv_ownedValueType_4_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());
			}
		)?
	)
;

// Entry rule entryRuleTupleTypeCS
entryRuleTupleTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTypeCSRule()); }
	iv_ruleTupleTypeCS=ruleTupleTypeCS
	{ $current=$iv_ruleTupleTypeCS.current; }
	EOF;

// Rule TupleTypeCS
ruleTupleTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Tuple'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTupleTypeCSRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Tuple");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());
						}
						lv_ownedParts_2_0=ruleTuplePartCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
							}
							add(
								$current,
								"ownedParts",
								lv_ownedParts_2_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());
							}
							lv_ownedParts_4_0=ruleTuplePartCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
								}
								add(
									$current,
									"ownedParts",
									lv_ownedParts_4_0,
									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleTuplePartCS
entryRuleTuplePartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTuplePartCSRule()); }
	iv_ruleTuplePartCS=ruleTuplePartCS
	{ $current=$iv_ruleTuplePartCS.current; }
	EOF;

// Rule TuplePartCS
ruleTuplePartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());
				}
				lv_ownedType_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCollectionLiteralExpCS
entryRuleCollectionLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule()); }
	iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS
	{ $current=$iv_ruleCollectionLiteralExpCS.current; }
	EOF;

// Rule CollectionLiteralExpCS
ruleCollectionLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
				}
				lv_ownedType_0_0=ruleCollectionTypeCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());
					}
					lv_ownedParts_2_0=ruleCollectionLiteralPartCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
						}
						add(
							$current,
							"ownedParts",
							lv_ownedParts_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());
						}
						lv_ownedParts_4_0=ruleCollectionLiteralPartCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
							}
							add(
								$current,
								"ownedParts",
								lv_ownedParts_4_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionLiteralPartCS
entryRuleCollectionLiteralPartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule()); }
	iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS
	{ $current=$iv_ruleCollectionLiteralPartCS.current; }
	EOF;

// Rule CollectionLiteralPartCS
ruleCollectionLiteralPartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());
					}
					lv_ownedExpression_0_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
						}
						set(
							$current,
							"ownedExpression",
							lv_ownedExpression_0_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='..'
				{
					newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());
						}
						lv_ownedLastExpression_2_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
							}
							set(
								$current,
								"ownedLastExpression",
								lv_ownedLastExpression_2_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());
				}
				lv_ownedExpression_3_0=rulePatternExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
					}
					set(
						$current,
						"ownedExpression",
						lv_ownedExpression_3_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCollectionPatternCS
entryRuleCollectionPatternCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionPatternCSRule()); }
	iv_ruleCollectionPatternCS=ruleCollectionPatternCS
	{ $current=$iv_ruleCollectionPatternCS.current; }
	EOF;

// Rule CollectionPatternCS
ruleCollectionPatternCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
				}
				lv_ownedType_0_0=ruleCollectionTypeCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());
					}
					lv_ownedParts_2_0=rulePatternExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
						}
						add(
							$current,
							"ownedParts",
							lv_ownedParts_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());
						}
						lv_ownedParts_4_0=rulePatternExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
							}
							add(
								$current,
								"ownedParts",
								lv_ownedParts_4_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5='++'
				{
					newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());
						}
						lv_restVariableName_6_0=ruleIdentifier
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
							}
							set(
								$current,
								"restVariableName",
								lv_restVariableName_6_0,
								"org.eclipse.ocl.xtext.base.Base.Identifier");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleShadowPartCS
entryRuleShadowPartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShadowPartCSRule()); }
	iv_ruleShadowPartCS=ruleShadowPartCS
	{ $current=$iv_ruleShadowPartCS.current; }
	EOF;

// Rule ShadowPartCS
ruleShadowPartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShadowPartCSRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0());
				}
				ruleUnrestrictedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_0());
					}
					lv_ownedInitExpression_2_1=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
						}
						set(
							$current,
							"ownedInitExpression",
							lv_ownedInitExpression_2_1,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_2_0_1());
					}
					lv_ownedInitExpression_2_2=rulePatternExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
						}
						set(
							$current,
							"ownedInitExpression",
							lv_ownedInitExpression_2_2,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePatternExpCS
entryRulePatternExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternExpCSRule()); }
	iv_rulePatternExpCS=rulePatternExpCS
	{ $current=$iv_rulePatternExpCS.current; }
	EOF;

// Rule PatternExpCS
rulePatternExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_patternVariableName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
					}
					set(
						$current,
						"patternVariableName",
						lv_patternVariableName_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());
				}
				lv_ownedPatternType_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
					}
					set(
						$current,
						"ownedPatternType",
						lv_ownedPatternType_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLambdaLiteralExpCS
entryRuleLambdaLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule()); }
	iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS
	{ $current=$iv_ruleLambdaLiteralExpCS.current; }
	EOF;

// Rule LambdaLiteralExpCS
ruleLambdaLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Lambda'
		{
			newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());
				}
				lv_ownedExpressionCS_2_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
					}
					set(
						$current,
						"ownedExpressionCS",
						lv_ownedExpressionCS_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapLiteralExpCS
entryRuleMapLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralExpCSRule()); }
	iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS
	{ $current=$iv_ruleMapLiteralExpCS.current; }
	EOF;

// Rule MapLiteralExpCS
ruleMapLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());
				}
				lv_ownedType_0_0=ruleMapTypeCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());
					}
					lv_ownedParts_2_0=ruleMapLiteralPartCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
						}
						add(
							$current,
							"ownedParts",
							lv_ownedParts_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());
						}
						lv_ownedParts_4_0=ruleMapLiteralPartCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
							}
							add(
								$current,
								"ownedParts",
								lv_ownedParts_4_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapLiteralPartCS
entryRuleMapLiteralPartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralPartCSRule()); }
	iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS
	{ $current=$iv_ruleMapLiteralPartCS.current; }
	EOF;

// Rule MapLiteralPartCS
ruleMapLiteralPartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());
				}
				lv_ownedKey_0_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
					}
					set(
						$current,
						"ownedKey",
						lv_ownedKey_0_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
				}
				lv_ownedValue_2_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
					}
					set(
						$current,
						"ownedValue",
						lv_ownedValue_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveLiteralExpCS
entryRulePrimitiveLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule()); }
	iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS
	{ $current=$iv_rulePrimitiveLiteralExpCS.current; }
	EOF;

// Rule PrimitiveLiteralExpCS
rulePrimitiveLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());
		}
		this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS
		{
			$current = $this_NumberLiteralExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());
		}
		this_StringLiteralExpCS_1=ruleStringLiteralExpCS
		{
			$current = $this_StringLiteralExpCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());
		}
		this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS
		{
			$current = $this_BooleanLiteralExpCS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());
		}
		this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS
		{
			$current = $this_UnlimitedNaturalLiteralExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());
		}
		this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS
		{
			$current = $this_InvalidLiteralExpCS_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());
		}
		this_NullLiteralExpCS_5=ruleNullLiteralExpCS
		{
			$current = $this_NullLiteralExpCS_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTupleLiteralExpCS
entryRuleTupleLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleLiteralExpCSRule()); }
	iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS
	{ $current=$iv_ruleTupleLiteralExpCS.current; }
	EOF;

// Rule TupleLiteralExpCS
ruleTupleLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Tuple'
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());
				}
				lv_ownedParts_2_0=ruleTupleLiteralPartCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
					}
					add(
						$current,
						"ownedParts",
						lv_ownedParts_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());
					}
					lv_ownedParts_4_0=ruleTupleLiteralPartCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
						}
						add(
							$current,
							"ownedParts",
							lv_ownedParts_4_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTupleLiteralPartCS
entryRuleTupleLiteralPartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleLiteralPartCSRule()); }
	iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS
	{ $current=$iv_ruleTupleLiteralPartCS.current; }
	EOF;

// Rule TupleLiteralPartCS
ruleTupleLiteralPartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());
				}
				lv_ownedInitExpression_4_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
					}
					set(
						$current,
						"ownedInitExpression",
						lv_ownedInitExpression_4_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumberLiteralExpCS
entryRuleNumberLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralExpCSRule()); }
	iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS
	{ $current=$iv_ruleNumberLiteralExpCS.current; }
	EOF;

// Rule NumberLiteralExpCS
ruleNumberLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());
			}
			lv_symbol_0_0=ruleNUMBER_LITERAL
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
				}
				set(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringLiteralExpCS
entryRuleStringLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralExpCSRule()); }
	iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS
	{ $current=$iv_ruleStringLiteralExpCS.current; }
	EOF;

// Rule StringLiteralExpCS
ruleStringLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());
			}
			lv_segments_0_0=ruleStringLiteral
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
				}
				add(
					$current,
					"segments",
					lv_segments_0_0,
					"org.eclipse.ocl.xtext.base.Base.StringLiteral");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleBooleanLiteralExpCS
entryRuleBooleanLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule()); }
	iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS
	{ $current=$iv_ruleBooleanLiteralExpCS.current; }
	EOF;

// Rule BooleanLiteralExpCS
ruleBooleanLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_0='true'
				{
					newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_0, "true");
				}
			)
		)
		    |
		(
			(
				lv_symbol_1_0='false'
				{
					newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_1_0, "false");
				}
			)
		)
	)
;

// Entry rule entryRuleUnlimitedNaturalLiteralExpCS
entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule()); }
	iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS
	{ $current=$iv_ruleUnlimitedNaturalLiteralExpCS.current; }
	EOF;

// Rule UnlimitedNaturalLiteralExpCS
ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='*'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());
		}
	)
;

// Entry rule entryRuleInvalidLiteralExpCS
entryRuleInvalidLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule()); }
	iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS
	{ $current=$iv_ruleInvalidLiteralExpCS.current; }
	EOF;

// Rule InvalidLiteralExpCS
ruleInvalidLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='invalid'
		{
			newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());
		}
	)
;

// Entry rule entryRuleNullLiteralExpCS
entryRuleNullLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullLiteralExpCSRule()); }
	iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS
	{ $current=$iv_ruleNullLiteralExpCS.current; }
	EOF;

// Rule NullLiteralExpCS
ruleNullLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleTypeLiteralCS
entryRuleTypeLiteralCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLiteralCSRule()); }
	iv_ruleTypeLiteralCS=ruleTypeLiteralCS
	{ $current=$iv_ruleTypeLiteralCS.current; }
	EOF;

// Rule TypeLiteralCS
ruleTypeLiteralCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());
		}
		this_PrimitiveTypeCS_0=rulePrimitiveTypeCS
		{
			$current = $this_PrimitiveTypeCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());
		}
		this_CollectionTypeCS_1=ruleCollectionTypeCS
		{
			$current = $this_CollectionTypeCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());
		}
		this_MapTypeCS_2=ruleMapTypeCS
		{
			$current = $this_MapTypeCS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());
		}
		this_TupleTypeCS_3=ruleTupleTypeCS
		{
			$current = $this_TupleTypeCS_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeLiteralWithMultiplicityCS
entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule()); }
	iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS
	{ $current=$iv_ruleTypeLiteralWithMultiplicityCS.current; }
	EOF;

// Rule TypeLiteralWithMultiplicityCS
ruleTypeLiteralWithMultiplicityCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());
		}
		this_TypeLiteralCS_0=ruleTypeLiteralCS
		{
			$current = $this_TypeLiteralCS_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
				}
				lv_ownedMultiplicity_1_0=ruleMultiplicityCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
					}
					set(
						$current,
						"ownedMultiplicity",
						lv_ownedMultiplicity_1_0,
						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTypeLiteralExpCS
entryRuleTypeLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLiteralExpCSRule()); }
	iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS
	{ $current=$iv_ruleTypeLiteralExpCS.current; }
	EOF;

// Rule TypeLiteralExpCS
ruleTypeLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());
			}
			lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
				}
				set(
					$current,
					"ownedType",
					lv_ownedType_0_0,
					"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeNameExpCS
entryRuleTypeNameExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameExpCSRule()); }
	iv_ruleTypeNameExpCS=ruleTypeNameExpCS
	{ $current=$iv_ruleTypeNameExpCS.current; }
	EOF;

// Rule TypeNameExpCS
ruleTypeNameExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
				}
				lv_ownedPathName_0_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_0_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());
					}
					lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
						}
						set(
							$current,
							"ownedCurlyBracketedClause",
							lv_ownedCurlyBracketedClause_1_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());
						}
						lv_ownedPatternGuard_3_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
							}
							set(
								$current,
								"ownedPatternGuard",
								lv_ownedPatternGuard_3_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleTypeExpCS
entryRuleTypeExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeExpCSRule()); }
	iv_ruleTypeExpCS=ruleTypeExpCS
	{ $current=$iv_ruleTypeExpCS.current; }
	EOF;

// Rule TypeExpCS
ruleTypeExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeNameExpCSParserRuleCall_0_0());
			}
			this_TypeNameExpCS_0=ruleTypeNameExpCS
			{
				$current = $this_TypeNameExpCS_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeLiteralCSParserRuleCall_0_1());
			}
			this_TypeLiteralCS_1=ruleTypeLiteralCS
			{
				$current = $this_TypeLiteralCS_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getTypeExpCSAccess().getCollectionPatternCSParserRuleCall_0_2());
			}
			this_CollectionPatternCS_2=ruleCollectionPatternCS
			{
				$current = $this_CollectionPatternCS_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
				}
				lv_ownedMultiplicity_3_0=ruleMultiplicityCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
					}
					set(
						$current,
						"ownedMultiplicity",
						lv_ownedMultiplicity_3_0,
						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpCS
entryRuleExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpCSRule()); }
	iv_ruleExpCS=ruleExpCS
	{ $current=$iv_ruleExpCS.current; }
	EOF;

// Rule ExpCS
ruleExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());
			}
			this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS
			{
				$current = $this_PrefixedPrimaryExpCS_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());
						}
						lv_name_2_0=ruleBinaryOperatorName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpCSRule());
							}
							set(
								$current,
								"name",
								lv_name_2_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());
						}
						lv_ownedRight_3_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpCSRule());
							}
							set(
								$current,
								"ownedRight",
								lv_ownedRight_3_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());
		}
		this_PrefixedLetExpCS_4=rulePrefixedLetExpCS
		{
			$current = $this_PrefixedLetExpCS_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrefixedLetExpCS
entryRulePrefixedLetExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixedLetExpCSRule()); }
	iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS
	{ $current=$iv_rulePrefixedLetExpCS.current; }
	EOF;

// Rule PrefixedLetExpCS
rulePrefixedLetExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleUnaryOperatorName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());
					}
					lv_ownedRight_2_0=rulePrefixedLetExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
						}
						set(
							$current,
							"ownedRight",
							lv_ownedRight_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());
		}
		this_LetExpCS_3=ruleLetExpCS
		{
			$current = $this_LetExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrefixedPrimaryExpCS
entryRulePrefixedPrimaryExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule()); }
	iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS
	{ $current=$iv_rulePrefixedPrimaryExpCS.current; }
	EOF;

// Rule PrefixedPrimaryExpCS
rulePrefixedPrimaryExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleUnaryOperatorName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());
					}
					lv_ownedRight_2_0=rulePrefixedPrimaryExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
						}
						set(
							$current,
							"ownedRight",
							lv_ownedRight_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());
		}
		this_PrimaryExpCS_3=rulePrimaryExpCS
		{
			$current = $this_PrimaryExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExpCS
entryRulePrimaryExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpCSRule()); }
	iv_rulePrimaryExpCS=rulePrimaryExpCS
	{ $current=$iv_rulePrimaryExpCS.current; }
	EOF;

// Rule PrimaryExpCS
rulePrimaryExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());
		}
		this_NestedExpCS_0=ruleNestedExpCS
		{
			$current = $this_NestedExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());
		}
		this_IfExpCS_1=ruleIfExpCS
		{
			$current = $this_IfExpCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());
		}
		this_SelfExpCS_2=ruleSelfExpCS
		{
			$current = $this_SelfExpCS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());
		}
		this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS
		{
			$current = $this_PrimitiveLiteralExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());
		}
		this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS
		{
			$current = $this_TupleLiteralExpCS_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());
		}
		this_MapLiteralExpCS_5=ruleMapLiteralExpCS
		{
			$current = $this_MapLiteralExpCS_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());
		}
		this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS
		{
			$current = $this_CollectionLiteralExpCS_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());
		}
		this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS
		{
			$current = $this_LambdaLiteralExpCS_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());
		}
		this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS
		{
			$current = $this_TypeLiteralExpCS_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());
		}
		this_NameExpCS_9=ruleNameExpCS
		{
			$current = $this_NameExpCS_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNameExpCS
entryRuleNameExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameExpCSRule()); }
	iv_ruleNameExpCS=ruleNameExpCS
	{ $current=$iv_ruleNameExpCS.current; }
	EOF;

// Rule NameExpCS
ruleNameExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
				}
				lv_ownedPathName_0_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_0_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());
				}
				lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
					}
					add(
						$current,
						"ownedSquareBracketedClauses",
						lv_ownedSquareBracketedClauses_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());
				}
				lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
					}
					set(
						$current,
						"ownedRoundBracketedClause",
						lv_ownedRoundBracketedClause_2_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());
				}
				lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
					}
					set(
						$current,
						"ownedCurlyBracketedClause",
						lv_ownedCurlyBracketedClause_3_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					lv_isPre_4_0='@'
					{
						newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNameExpCSRule());
						}
						setWithLastConsumed($current, "isPre", true, "@");
					}
				)
			)
			otherlv_5='pre'
			{
				newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());
			}
		)?
	)
;

// Entry rule entryRuleCurlyBracketedClauseCS
entryRuleCurlyBracketedClauseCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule()); }
	iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS
	{ $current=$iv_ruleCurlyBracketedClauseCS.current; }
	EOF;

// Rule CurlyBracketedClauseCS
ruleCurlyBracketedClauseCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0_0());
						}
						lv_ownedParts_2_0=ruleShadowPartCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
							}
							add(
								$current,
								"ownedParts",
								lv_ownedParts_2_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_1_1_0());
							}
							lv_ownedParts_4_0=ruleShadowPartCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
								}
								add(
									$current,
									"ownedParts",
									lv_ownedParts_4_0,
									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getValueStringLiteralParserRuleCall_2_1_0());
					}
					lv_value_5_0=ruleStringLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.ocl.xtext.base.Base.StringLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRoundBracketedClauseCS
entryRuleRoundBracketedClauseCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule()); }
	iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS
	{ $current=$iv_ruleRoundBracketedClauseCS.current; }
	EOF;

// Rule RoundBracketedClauseCS
ruleRoundBracketedClauseCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());
					}
					lv_ownedArguments_2_0=ruleNavigatingArgCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
						}
						add(
							$current,
							"ownedArguments",
							lv_ownedArguments_2_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0());
					}
					lv_ownedArguments_3_0=ruleNavigatingCommaArgCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
						}
						add(
							$current,
							"ownedArguments",
							lv_ownedArguments_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_2_0_0());
						}
						lv_ownedArguments_4_0=ruleNavigatingSemiArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
							}
							add(
								$current,
								"ownedArguments",
								lv_ownedArguments_4_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_2_1_0());
						}
						lv_ownedArguments_5_0=ruleNavigatingCommaArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
							}
							add(
								$current,
								"ownedArguments",
								lv_ownedArguments_5_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_3_0_0());
						}
						lv_ownedArguments_6_0=ruleNavigatingBarArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
							}
							add(
								$current,
								"ownedArguments",
								lv_ownedArguments_6_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_3_1_0());
						}
						lv_ownedArguments_7_0=ruleNavigatingCommaArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
							}
							add(
								$current,
								"ownedArguments",
								lv_ownedArguments_7_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSquareBracketedClauseCS
entryRuleSquareBracketedClauseCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule()); }
	iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS
	{ $current=$iv_ruleSquareBracketedClauseCS.current; }
	EOF;

// Rule SquareBracketedClauseCS
ruleSquareBracketedClauseCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());
				}
				lv_ownedTerms_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
					}
					add(
						$current,
						"ownedTerms",
						lv_ownedTerms_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());
					}
					lv_ownedTerms_3_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
						}
						add(
							$current,
							"ownedTerms",
							lv_ownedTerms_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNavigatingArgCS
entryRuleNavigatingArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingArgCSRule()); }
	iv_ruleNavigatingArgCS=ruleNavigatingArgCS
	{ $current=$iv_ruleNavigatingArgCS.current; }
	EOF;

// Rule NavigatingArgCS
ruleNavigatingArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());
					}
					lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
						}
						set(
							$current,
							"ownedNameExpression",
							lv_ownedNameExpression_0_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.NavigatingArgExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_1=':'
					{
						newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_0_1_0());
							}
							lv_ownedType_2_0=ruleTypeExpCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
								}
								set(
									$current,
									"ownedType",
									lv_ownedType_2_0,
									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3='='
						{
							newLeafNode(otherlv_3, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());
								}
								lv_ownedInitExpression_4_0=ruleExpCS
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
									}
									set(
										$current,
										"ownedInitExpression",
										lv_ownedInitExpression_4_0,
										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
				    |
				(
					otherlv_5='in'
					{
						newLeafNode(otherlv_5, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_1_0());
							}
							lv_ownedInitExpression_6_0=ruleExpCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
								}
								set(
									$current,
									"ownedInitExpression",
									lv_ownedInitExpression_6_0,
									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_8_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_8_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNavigatingBarArgCS
entryRuleNavigatingBarArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingBarArgCSRule()); }
	iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS
	{ $current=$iv_ruleNavigatingBarArgCS.current; }
	EOF;

// Rule NavigatingBarArgCS
ruleNavigatingBarArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0='|'
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, "|");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
					}
					set(
						$current,
						"ownedNameExpression",
						lv_ownedNameExpression_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
						}
						lv_ownedInitExpression_5_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
							}
							set(
								$current,
								"ownedInitExpression",
								lv_ownedInitExpression_5_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRuleNavigatingCommaArgCS
entryRuleNavigatingCommaArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule()); }
	iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS
	{ $current=$iv_ruleNavigatingCommaArgCS.current; }
	EOF;

// Rule NavigatingCommaArgCS
ruleNavigatingCommaArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0=','
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, ",");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
					}
					set(
						$current,
						"ownedNameExpression",
						lv_ownedNameExpression_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2=':'
				{
					newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0_1_0());
						}
						lv_ownedType_3_0=ruleTypeExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
							}
							set(
								$current,
								"ownedType",
								lv_ownedType_3_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='='
					{
						newLeafNode(otherlv_4, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());
							}
							lv_ownedInitExpression_5_0=ruleExpCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
								}
								set(
									$current,
									"ownedInitExpression",
									lv_ownedInitExpression_5_0,
									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				otherlv_6='in'
				{
					newLeafNode(otherlv_6, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_1_0());
						}
						lv_ownedInitExpression_7_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
							}
							set(
								$current,
								"ownedInitExpression",
								lv_ownedInitExpression_7_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleNavigatingSemiArgCS
entryRuleNavigatingSemiArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule()); }
	iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS
	{ $current=$iv_ruleNavigatingSemiArgCS.current; }
	EOF;

// Rule NavigatingSemiArgCS
ruleNavigatingSemiArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0=';'
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, ";");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
					}
					set(
						$current,
						"ownedNameExpression",
						lv_ownedNameExpression_1_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
						}
						lv_ownedInitExpression_5_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
							}
							set(
								$current,
								"ownedInitExpression",
								lv_ownedInitExpression_5_0,
								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRuleIfExpCS
entryRuleIfExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpCSRule()); }
	iv_ruleIfExpCS=ruleIfExpCS
	{ $current=$iv_ruleIfExpCS.current; }
	EOF;

// Rule IfExpCS
ruleIfExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());
					}
					lv_ownedCondition_1_1=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
						}
						set(
							$current,
							"ownedCondition",
							lv_ownedCondition_1_1,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());
					}
					lv_ownedCondition_1_2=rulePatternExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
						}
						set(
							$current,
							"ownedCondition",
							lv_ownedCondition_1_2,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
				}
				lv_ownedThenExpression_3_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					set(
						$current,
						"ownedThenExpression",
						lv_ownedThenExpression_3_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());
				}
				lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					add(
						$current,
						"ownedIfThenExpressions",
						lv_ownedIfThenExpressions_4_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='else'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());
				}
				lv_ownedElseExpression_6_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					set(
						$current,
						"ownedElseExpression",
						lv_ownedElseExpression_6_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='endif'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());
		}
	)
;

// Entry rule entryRuleElseIfThenExpCS
entryRuleElseIfThenExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseIfThenExpCSRule()); }
	iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS
	{ $current=$iv_ruleElseIfThenExpCS.current; }
	EOF;

// Rule ElseIfThenExpCS
ruleElseIfThenExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='elseif'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());
				}
				lv_ownedCondition_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
					}
					set(
						$current,
						"ownedCondition",
						lv_ownedCondition_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
				}
				lv_ownedThenExpression_3_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
					}
					set(
						$current,
						"ownedThenExpression",
						lv_ownedThenExpression_3_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLetExpCS
entryRuleLetExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetExpCSRule()); }
	iv_ruleLetExpCS=ruleLetExpCS
	{ $current=$iv_ruleLetExpCS.current; }
	EOF;

// Rule LetExpCS
ruleLetExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());
				}
				lv_ownedVariables_1_0=ruleLetVariableCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
					}
					add(
						$current,
						"ownedVariables",
						lv_ownedVariables_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());
					}
					lv_ownedVariables_3_0=ruleLetVariableCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
						}
						add(
							$current,
							"ownedVariables",
							lv_ownedVariables_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());
				}
				lv_ownedInExpression_5_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
					}
					set(
						$current,
						"ownedInExpression",
						lv_ownedInExpression_5_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLetVariableCS
entryRuleLetVariableCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetVariableCSRule()); }
	iv_ruleLetVariableCS=ruleLetVariableCS
	{ $current=$iv_ruleLetVariableCS.current; }
	EOF;

// Rule LetVariableCS
ruleLetVariableCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());
				}
				lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
					}
					set(
						$current,
						"ownedRoundBracketedClause",
						lv_ownedRoundBracketedClause_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());
				}
				lv_ownedInitExpression_5_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
					}
					set(
						$current,
						"ownedInitExpression",
						lv_ownedInitExpression_5_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNestedExpCS
entryRuleNestedExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedExpCSRule()); }
	iv_ruleNestedExpCS=ruleNestedExpCS
	{ $current=$iv_ruleNestedExpCS.current; }
	EOF;

// Rule NestedExpCS
ruleNestedExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());
				}
				lv_ownedExpression_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
					}
					set(
						$current,
						"ownedExpression",
						lv_ownedExpression_1_0,
						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSelfExpCS
entryRuleSelfExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelfExpCSRule()); }
	iv_ruleSelfExpCS=ruleSelfExpCS
	{ $current=$iv_ruleSelfExpCS.current; }
	EOF;

// Rule SelfExpCS
ruleSelfExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='self'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplicityBoundsCS
entryRuleMultiplicityBoundsCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule()); }
	iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS
	{ $current=$iv_ruleMultiplicityBoundsCS.current; }
	EOF;

// Rule MultiplicityBoundsCS
ruleMultiplicityBoundsCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());
				}
				lv_lowerBound_0_0=ruleLOWER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
					}
					set(
						$current,
						"lowerBound",
						lv_lowerBound_0_0,
						"org.eclipse.ocl.xtext.base.Base.LOWER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='..'
			{
				newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());
					}
					lv_upperBound_2_0=ruleUPPER
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_2_0,
							"org.eclipse.ocl.xtext.base.Base.UPPER");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMultiplicityCS
entryRuleMultiplicityCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityCSRule()); }
	iv_ruleMultiplicityCS=ruleMultiplicityCS
	{ $current=$iv_ruleMultiplicityCS.current; }
	EOF;

// Rule MultiplicityCS
ruleMultiplicityCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());
			}
			this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS
			{
				$current = $this_MultiplicityBoundsCS_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());
			}
			this_MultiplicityStringCS_2=ruleMultiplicityStringCS
			{
				$current = $this_MultiplicityStringCS_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_3='|?'
			{
				newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());
			}
			    |
			(
				(
					lv_isNullFree_4_0='|1'
					{
						newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultiplicityCSRule());
						}
						setWithLastConsumed($current, "isNullFree", true, "|1");
					}
				)
			)
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMultiplicityStringCS
entryRuleMultiplicityStringCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityStringCSRule()); }
	iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS
	{ $current=$iv_ruleMultiplicityStringCS.current; }
	EOF;

// Rule MultiplicityStringCS
ruleMultiplicityStringCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_stringBounds_0_1='*'
				{
					newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
					}
					setWithLastConsumed($current, "stringBounds", lv_stringBounds_0_1, null);
				}
				    |
				lv_stringBounds_0_2='+'
				{
					newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
					}
					setWithLastConsumed($current, "stringBounds", lv_stringBounds_0_2, null);
				}
				    |
				lv_stringBounds_0_3='?'
				{
					newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
					}
					setWithLastConsumed($current, "stringBounds", lv_stringBounds_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRulePathNameCS
entryRulePathNameCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathNameCSRule()); }
	iv_rulePathNameCS=rulePathNameCS
	{ $current=$iv_rulePathNameCS.current; }
	EOF;

// Rule PathNameCS
rulePathNameCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());
				}
				lv_ownedPathElements_0_0=ruleFirstPathElementCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathNameCSRule());
					}
					add(
						$current,
						"ownedPathElements",
						lv_ownedPathElements_0_0,
						"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());
					}
					lv_ownedPathElements_2_0=ruleNextPathElementCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathNameCSRule());
						}
						add(
							$current,
							"ownedPathElements",
							lv_ownedPathElements_2_0,
							"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFirstPathElementCS
entryRuleFirstPathElementCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFirstPathElementCSRule()); }
	iv_ruleFirstPathElementCS=ruleFirstPathElementCS
	{ $current=$iv_ruleFirstPathElementCS.current; }
	EOF;

// Rule FirstPathElementCS
ruleFirstPathElementCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFirstPathElementCSRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
			}
			ruleUnrestrictedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNextPathElementCS
entryRuleNextPathElementCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNextPathElementCSRule()); }
	iv_ruleNextPathElementCS=ruleNextPathElementCS
	{ $current=$iv_ruleNextPathElementCS.current; }
	EOF;

// Rule NextPathElementCS
ruleNextPathElementCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNextPathElementCSRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
			}
			ruleUnreservedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTemplateBindingCS
entryRuleTemplateBindingCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateBindingCSRule()); }
	iv_ruleTemplateBindingCS=ruleTemplateBindingCS
	{ $current=$iv_ruleTemplateBindingCS.current; }
	EOF;

// Rule TemplateBindingCS
ruleTemplateBindingCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());
				}
				lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
					}
					add(
						$current,
						"ownedSubstitutions",
						lv_ownedSubstitutions_0_0,
						"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());
					}
					lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
						}
						add(
							$current,
							"ownedSubstitutions",
							lv_ownedSubstitutions_2_0,
							"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());
				}
				lv_ownedMultiplicity_3_0=ruleMultiplicityCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
					}
					set(
						$current,
						"ownedMultiplicity",
						lv_ownedMultiplicity_3_0,
						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTemplateParameterSubstitutionCS
entryRuleTemplateParameterSubstitutionCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule()); }
	iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS
	{ $current=$iv_ruleTemplateParameterSubstitutionCS.current; }
	EOF;

// Rule TemplateParameterSubstitutionCS
ruleTemplateParameterSubstitutionCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());
			}
			lv_ownedActualParameter_0_0=ruleTypeRefCS
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
				}
				set(
					$current,
					"ownedActualParameter",
					lv_ownedActualParameter_0_0,
					"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeParameterCS
entryRuleTypeParameterCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeParameterCSRule()); }
	iv_ruleTypeParameterCS=ruleTypeParameterCS
	{ $current=$iv_ruleTypeParameterCS.current; }
	EOF;

// Rule TypeParameterCS
ruleTypeParameterCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.ocl.xtext.completeocl.CompleteOCL.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='extends'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());
					}
					lv_ownedExtends_2_0=ruleTypedRefCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
						}
						add(
							$current,
							"ownedExtends",
							lv_ownedExtends_2_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TypedRefCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='&&'
				{
					newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());
						}
						lv_ownedExtends_4_0=ruleTypedRefCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
							}
							add(
								$current,
								"ownedExtends",
								lv_ownedExtends_4_0,
								"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TypedRefCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleTypeRefCS
entryRuleTypeRefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRefCSRule()); }
	iv_ruleTypeRefCS=ruleTypeRefCS
	{ $current=$iv_ruleTypeRefCS.current; }
	EOF;

// Rule TypeRefCS
ruleTypeRefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());
		}
		this_TypedRefCS_0=ruleTypedRefCS
		{
			$current = $this_TypedRefCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());
		}
		this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS
		{
			$current = $this_WildcardTypeRefCS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypedTypeRefCS
entryRuleTypedTypeRefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedTypeRefCSRule()); }
	iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS
	{ $current=$iv_ruleTypedTypeRefCS.current; }
	EOF;

// Rule TypedTypeRefCS
ruleTypedTypeRefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
				}
				lv_ownedPathName_0_0=rulePathNameCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
					}
					set(
						$current,
						"ownedPathName",
						lv_ownedPathName_0_0,
						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());
					}
					lv_ownedBinding_2_0=ruleTemplateBindingCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
						}
						set(
							$current,
							"ownedBinding",
							lv_ownedBinding_2_0,
							"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleWildcardTypeRefCS
entryRuleWildcardTypeRefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWildcardTypeRefCSRule()); }
	iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS
	{ $current=$iv_ruleWildcardTypeRefCS.current; }
	EOF;

// Rule WildcardTypeRefCS
ruleWildcardTypeRefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
					$current);
			}
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());
		}
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());
					}
					lv_ownedExtends_3_0=ruleTypedRefCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
						}
						set(
							$current,
							"ownedExtends",
							lv_ownedExtends_3_0,
							"org.eclipse.ocl.xtext.completeocl.CompleteOCL.TypedRefCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleID
entryRuleID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIDRule()); }
	iv_ruleID=ruleID
	{ $current=$iv_ruleID.current.getText(); }
	EOF;

// Rule ID
ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SIMPLE_ID_0=RULE_SIMPLE_ID
		{
			$current.merge(this_SIMPLE_ID_0);
		}
		{
			newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());
		}
		    |
		this_ESCAPED_ID_1=RULE_ESCAPED_ID
		{
			$current.merge(this_ESCAPED_ID_1);
		}
		{
			newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current.getText(); }
	EOF;

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());
	}
	this_ID_0=ruleID
	{
		$current.merge(this_ID_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLOWER
entryRuleLOWER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLOWERRule()); }
	iv_ruleLOWER=ruleLOWER
	{ $current=$iv_ruleLOWER.current.getText(); }
	EOF;

// Rule LOWER
ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleNUMBER_LITERAL
entryRuleNUMBER_LITERAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBER_LITERALRule()); }
	iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL
	{ $current=$iv_ruleNUMBER_LITERAL.current.getText(); }
	EOF;

// Rule NUMBER_LITERAL
ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current.getText(); }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_SINGLE_QUOTED_STRING_0=RULE_SINGLE_QUOTED_STRING
	{
		$current.merge(this_SINGLE_QUOTED_STRING_0);
	}
	{
		newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleUPPER
entryRuleUPPER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUPPERRule()); }
	iv_ruleUPPER=ruleUPPER
	{ $current=$iv_ruleUPPER.current.getText(); }
	EOF;

// Rule UPPER
ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());
		}
	)
;

// Entry rule entryRuleURI
entryRuleURI returns [String current=null]:
	{ newCompositeNode(grammarAccess.getURIRule()); }
	iv_ruleURI=ruleURI
	{ $current=$iv_ruleURI.current.getText(); }
	EOF;

// Rule URI
ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_SINGLE_QUOTED_STRING_0=RULE_SINGLE_QUOTED_STRING
	{
		$current.merge(this_SINGLE_QUOTED_STRING_0);
	}
	{
		newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());
	}
;

RULE_IMPORT_URI : RULE_SCHEME RULE_SIMPLE_ID (('.'|'/') RULE_SIMPLE_ID)*;

fragment RULE_SCHEME : RULE_SIMPLE_ID ':/';

RULE_UNQUOTED_STRING : '\u00A3$%^\u00A3$%^';

fragment RULE_ESCAPED_CHARACTER : '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\');

fragment RULE_LETTER_CHARACTER : ('a'..'z'|'A'..'Z'|'_');

RULE_DOUBLE_QUOTED_STRING : '"' (RULE_ESCAPED_CHARACTER|~(('\\'|'"')))* '"';

RULE_SINGLE_QUOTED_STRING : '\'' (RULE_ESCAPED_CHARACTER|~(('\\'|'\'')))* '\'';

RULE_ML_SINGLE_QUOTED_STRING : '/\'' ( options {greedy=false;} : . )*'\'/';

RULE_SIMPLE_ID : RULE_LETTER_CHARACTER (RULE_LETTER_CHARACTER|'0'..'9')*;

RULE_ESCAPED_ID : '_' RULE_SINGLE_QUOTED_STRING;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
